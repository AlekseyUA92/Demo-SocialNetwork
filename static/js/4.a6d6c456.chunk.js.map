{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","imgPath","img","className","s","dialogItem","to","src","alt","name","Message","nameForClass","message","messageSecondPerson","text","maxLength50","maxLengthCreator","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","type","Dialogs","dialogElements","dialogs","map","d","imgSrc","messageElements","messages","m","dialogs_items","value","sendMessage","newMessage","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsData","newMessageText","dispatch","action","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,oBAAsB,qCAAqC,QAAU,2B,sGCkB5SC,EAfI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAC3BC,EAAUH,EAAMI,IAEpB,OACI,qBAAKC,UAAWC,IAAEC,WAAlB,SACI,eAAC,IAAD,CAASC,GAAIP,EAAb,UACI,8BAAK,qBAAKQ,IAAKN,EAASO,IAAI,oBAC3BV,EAAMW,WCIRC,EAZC,SAACZ,GAEb,IAAIa,EAAeP,IAAEQ,QAKrB,OAJId,EAAME,GAAK,GAAK,IAChBW,EAAeP,IAAES,qBAIjB,qBAAKV,UAAWQ,EAAhB,SAA+Bb,EAAMgB,Q,iCCRvCC,EAAcC,YAAiB,IAsBtBC,EAJaC,YAAU,CAClCC,KAAM,qBADkBD,EAhBL,SAACpB,GACpB,OACI,uBAAMsB,SAAUtB,EAAMuB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,YAAa,qBACbd,KAAM,aACNe,SAAU,CAACC,IAAUV,GACrBW,UAAWC,QAEnB,8BACI,wBAAQC,KAAK,SAAb,8BCqBDC,EA9BC,SAAC/B,GACb,IAAIgC,EAAiBhC,EAAMiC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMT,GAAIiC,EAAEjC,GAAIE,IAAK+B,EAAEC,YACnFC,EAAkBrC,EAAMsC,SAASJ,KAAI,SAAAK,GAAC,OAAI,cAAC,EAAD,CAASvB,KAAMuB,EAAEzB,QAASZ,GAAIqC,EAAErC,QAa9E,OACI,sBAAKG,UAAWC,IAAE2B,QAAlB,UACI,qBAAK5B,UAAWC,IAAEkC,cAAlB,SACKR,IAEL,sBAAK3B,UAAWC,IAAEgC,SAAlB,UACKD,EACD,cAAC,EAAD,CAAgBf,SAlBV,SAACmB,GACfzC,EAAM0C,YAAYD,EAAME,sB,uDCV5BC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,OC0BNE,sBACXC,aAzBkB,SAACJ,GACnB,MAAO,CACHZ,QAASY,EAAMK,YAAYjB,QAC3BK,SAAUO,EAAMK,YAAYZ,SAC5Ba,eAAgBN,EAAMK,YAAYC,mBAIjB,SAACC,GACtB,MAAO,CACHV,YAAa,SAACC,GACV,IAAIU,EAASC,YAAwBX,GACrCS,EAASC,SDXW,SAACE,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKzD,MAAM8C,OAET,cAACS,EAAD,eAAeE,KAAKzD,QAFI,cAAC,IAAD,CAAUQ,GAAI,eAHJ,GACbkD,IAAMH,WAYtC,OAJqCN,YAAQL,EAARK,CACnCO,KCaWR,CAGbjB","file":"static/js/4.a6d6c456.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__BC7sh\",\"dialogs_items\":\"Dialogs_dialogs_items__iyDZJ\",\"dialogItem\":\"Dialogs_dialogItem__1f6oo\",\"dialog\":\"Dialogs_dialog__bwTbY\",\"messages\":\"Dialogs_messages__1pBvo\",\"message\":\"Dialogs_message__17UAm\",\"messageSecondPerson\":\"Dialogs_messageSecondPerson__3cU0-\",\"chatBox\":\"Dialogs_chatBox__NUILi\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id\r\n    let imgPath = props.img\r\n\r\n    return (\r\n        <div className={s.dialogItem}>\r\n            <NavLink to={path}>\r\n                <div><img src={imgPath} alt=\"profile Photo\" /></div>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    let nameForClass = s.message\r\n    if (props.id % 2 == 0) {\r\n        nameForClass = s.messageSecondPerson\r\n    }\r\n\r\n    return (\r\n        <div className={nameForClass}>{props.text}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from './../Common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field\r\n                    placeholder={'Enter your message'}\r\n                    name={'newMessage'}\r\n                    validate={[required, maxLength50]}\r\n                    component={Textarea} />\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst NewMessageReduxForm = reduxForm({\r\n    form: 'dialogsNewMessage'\r\n})(NewMessageForm)\r\n\r\nexport default NewMessageReduxForm","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport NewMessageForm from './NewMessageForm';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} img={d.imgSrc} />)\r\n    let messageElements = props.messages.map(m => <Message text={m.message} id={m.id} />)\r\n\r\n    let sendMessage = (value) => {\r\n        props.sendMessage(value.newMessage)\r\n    }\r\n    // Enter keyDown\r\n    // const handleKeyDown = (event) => {\r\n    //     props.onHandleKeyDown(event)\r\n    // }\r\n\r\n\r\n    // if (props.isAuth == false) return <Redirect to={'/Login'} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_items}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <NewMessageForm onSubmit={sendMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/Login'} />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from 'react'\r\nimport { addMessageActionCreator } from \"./../../redux/dialogs-reducer\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsData.dialogs,\r\n        messages: state.dialogsData.messages,\r\n        newMessageText: state.dialogsData.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage) => {\r\n            let action = addMessageActionCreator(newMessage)\r\n            dispatch(action)\r\n        }\r\n        // onHandleKeyDown: (event) => {\r\n        //     if (event.key === 'Enter') {\r\n        //         let action = addMessageActionCreator()\r\n        //         dispatch(action)\r\n        //     }\r\n        // },\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}